// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum CITIZENSHIP {
  WNI
  WNA
}

model UserAccount {
  user_id    String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username   String   @unique @db.VarChar(30)
  password   String   @db.VarChar(60)
  created_at DateTime @default(now()) @db.Timestamptz(3)
  updated_at DateTime @updatedAt @db.Timestamptz(3)

  @@map("user_account")
}

model Customer {
  customer_id  String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  fullname     String      @db.VarChar(30)
  email        String      @unique @db.VarChar(255)
  phone_number String      @unique @db.VarChar()
  address      String      @db.VarChar(255)
  dob          DateTime    @db.Date
  citizenship  CITIZENSHIP @default(WNI)
  country      String      @default("Indonesia") @db.VarChar(255)
  images       Bytes?      @db.ByteA
  created_at   DateTime    @default(now()) @db.Timestamptz(3)
  updated_at   DateTime    @updatedAt @db.Timestamptz(3)

  // Index untuk sort nama dan email (ascending)
  @@index([fullname(sort: Asc)])
  @@index([email(sort: Asc)])
  // Index untuk sort created_at (descending)
  @@index([created_at(sort: Desc)])
  // Index untuk filter citizenship
  @@index([citizenship(sort: Asc)])
  // Index untuk filter citizenship dengan created_at
  @@index([citizenship(sort: Asc), created_at(sort: Desc)])
  // Index untuk search by fullname atau email
  @@map("customer")
}
